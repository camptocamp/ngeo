dist: trusty
sudo: false

language: node_js
node_js:
- "8"

notifications:
  email: false

env:
  global:
  - CXX=g++-4.8
  - secure: "l/McmiK4djffT04/+5MxW9sy4yO80Rf6vq+nZb5P647A6pXpPLdoRLGo50CtYRiKnFLiChHk2QxUOspeKuIKE+UQAm9dGmyMgfYkj/jwxIBd0YQqavaGzoWo5U1ZSGKeVd3kJlIaUJyLlnKbBOmFCY00c4JLveAagsV53lbephY="
  - GIT_REMOTE_NAME=origin
  - GITHUB_USERNAME=camptocamp

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - google-chrome
    packages:
    - g++-4.8
    - python-virtualenv
    - google-chrome-stable

cache:
  apt: true
  pip: true

before_install:
- python3 --version
- /opt/google/chrome/chrome --version
- git config --global user.name "Travis"
- git config --global user.email "travis@travis-ci.org"

install:
- export GIT_BRANCH=${TRAVIS_BRANCH}
- if [ ${TRAVIS_REPO_SLUG}-${TRAVIS_PULL_REQUEST} = camptocamp/ngeo-false ]; then IS_HOME=TRUE; else IS_HOME=FALSE; fi

- if [ ${IS_HOME} = TRUE ]; then openssl aes-256-cbc -K $encrypted_66d875d20fac_key -iv $encrypted_66d875d20fac_iv -in secrets.tar.enc -out secrets.tar -d; fi
- if [ ${IS_HOME} = TRUE ]; then tar xvf secrets.tar; fi
- if [ ${IS_HOME} = TRUE ]; then rm secrets.tar; fi
- if [ ${IS_HOME} = TRUE ]; then cp .transifexrc $HOME/.transifexrc; fi
- if [ ${IS_HOME} = TRUE ]; then cp ngeo_deploy_key $HOME/.ssh/id_rsa; fi
- if [ ${IS_HOME} = TRUE ]; then chmod 600 $HOME/.ssh/id_rsa; fi
- git fetch origin ${TRAVIS_BRANCH}:${TRAVIS_BRANCH}

stages:
- Lint
- Tests
- Build
- Build and publish
- Publish on transifex

jobs:
  include:
  - stage: Lint
    install: []
    script:
    - make eof-newline
    - make lint
    - make check-ngeox
    - make git-attributes
    - make check-examples-checker
    - if [ "`git grep @fileoverview src contribs`" != "" ]; then echo "Using @fileoverview breaks the documentation main page"; false; fi
    - if [ "`git grep @example src contribs`" != "" ]; then echo "We don't use @example to have the example in the description"; false; fi

  - stage: Tests
    install: []
    script:
    - export CHROME_BIN=/opt/google/chrome/chrome
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    - make test
    after_success:
    - cat .build/coverage/lcov.info | node ./node_modules/coveralls/bin/coveralls.js
  - stage: Tests
    env:
    - JOB=webpack
    script:
    - npm install
    - git add -A  # for git-attributes
    - if [ "${TRAVIS_PULL_REQUEST}" == false ]; then export NODE_ENV=prod; else export NODE_ENV=dev; fi
    - export CHROME_BIN=/opt/google/chrome/chrome
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    - ./node_modules/karma/bin/karma start karma-conf.js --single-run
    - make example-hosted-webpack
    - make lint
    - if [ ${IS_HOME} = TRUE ]; then JOB=publish-examples buildtools/deploy.sh; fi
    - gem install jgrep
    - export PACKAGE_VERSION=`jgrep --simple=version --input=package.json`
    - echo "_auth = ${NPM_AUTH}" > ~/.npmrc
    - echo "email = stephane.brunner@camptocamp.com" >> ~/.npmrc
    after_success:
    - cat .build/coverage/lcov.info | node ./node_modules/coveralls/bin/coveralls.js
    - if [ "${PACKAGE_VERSION}" = "${TRAVIS_TAG}" ]; then npm publish; fi

  - stage: Build
    env:
    - JOB=test-examples
    - DEVELOPMENT=TRUE
    script:
    # Workaround to be able to build the apps
    - make .build/node_modules.timestamp
    - buildtools/test_examples.py 1/1
    if: type = pull_request
  - stage: Build
    env:
    - JOB=build-examples-gmf-apps
    - DEVELOPMENT=TRUE
    script:
    - make .build/node_modules.timestamp
    - make examples-hosted-apps
    if: type = pull_request
  - stage: Build
    env:
    - JOB=build-api-docs
    script:
    - make .build/apidoc
    if: type = pull_request
  - stage: Build
    env:
    - JOB=build-dist
    - DEVELOPMENT=TRUE
    script:
    - make dist/ngeo.js
    - make dist/gmf.js
    if: type = pull_request
  - stage: Build and publish
    env:
    - JOB=publish-npm
    script:
#    - make dist/ngeo.js
#    - make dist/gmf.js
    - make .build/node_modules.timestamp
    - gem install jgrep
    - export PACKAGE_VERSION=`jgrep --simple=version --input=package.json`
    - echo "_auth = ${NPM_AUTH}" > ~/.npmrc
    - echo "email = stephane.brunner@camptocamp.com" >> ~/.npmrc
    after_success:
    - if [[ $TRAVIS_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+-[a-z]+\.[0-9]+$ ]]; then export TAG="--tag `echo $TRAVIS_TAG|awk -F[.-] '{print $4}'`"; fi
    - if [ "${PACKAGE_VERSION}" = "${TRAVIS_TAG}" ]; then npm publish $TAG; fi
    if: tag IS present AND repo = camptocamp/ngeo
  - stage: Build and publish
    env:
    - JOB=publish-apps-gmf
    script:
    - buildtools/deploy.sh
    if: type = push AND repo = camptocamp/ngeo AND branch IS present
  - stage: Build and publish
    env:
    - JOB=publish-api-docs
    script:
    - buildtools/deploy.sh
    if: type = push AND repo = camptocamp/ngeo AND branch IS present

  - stage: Publish on transifex
    script:
    - make transifex-send
    if: type = push AND branch = master AND repo = camptocamp/ngeo
