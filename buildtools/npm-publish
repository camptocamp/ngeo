#!/bin/bash -ex

# The MIT License (MIT)
#
# Copyright (c) Camptocamp SA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

PACKAGE_VERSION=$(buildtools/get-version version)
echo "Trying to publish tag ${GITHUB_REF} from package ${PACKAGE_VERSION} on ${GITHUB_REPOSITORY}"

RUN=''
for arg in "$@"; do
    shift
    case "$arg" in
        "--dry-run") RUN="echo " ;;
    esac
done

if [ "${GITHUB_REPOSITORY}" = "camptocamp/ngeo" ]; then
    if [[ "${GITHUB_REF}" =~ ^refs/tags/.* ]]; then
        GIT_TAG="${GITHUB_REF//refs\/tags\//}"
        echo "The tag ${GIT_TAG} should be published to npm"
        if [[ "${GIT_TAG}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+\.[0-9]+)?$ ]]; then
            echo "This is a regular version (not a dev version)"
            TAG="--tag version-$(echo "${GIT_TAG}" | awk -F[.-] '{print $4}')"
        else
            echo "This is not a regular version"
        fi
        if [ "${PACKAGE_VERSION}" = "${GIT_TAG}" ]; then
            $RUN npm publish --tag="version-${MAIN_BRANCH}" "${TAG}"
        else
            echo "Skipping publication, the Git tag and package version differ"
        fi
    else
        if [ "${GITHUB_REF}" = "refs/heads/${MAIN_BRANCH}" ]; then
            echo "Publish daily version"
            $RUN npm install --force --no-save fluid-publish
            if [ "${MAIN_BRANCH}" = "master" ]; then
                $RUN node_modules/.bin/fluid-publish devTag="latest"
            else
                $RUN node_modules/.bin/fluid-publish devTag="version-${MAIN_BRANCH}-latest"
            fi
        fi
    fi
fi
