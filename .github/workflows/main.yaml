---
name: Continuous integration

on:
  push:

jobs:
  not-failed-backport:
    runs-on: ubuntu-20.04
    name: Test that's not a failed backport
    timeout-minutes: 5
    steps:
      - run: 'false'
        if: "github.event.head_commit.message == '[skip ci] Add instructions to finish the backport.'"

  main:
    runs-on: ubuntu-18.04
    name: Continuous integration
    timeout-minutes: 30
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    env:
      MAIN_BRANCH: 2.5
      CI: true
      PATH: /bin:/usr/bin:/usr/local/bin:/home/runner/.local/bin

    steps:
      - run: '! ls BACKPORT_TODO'
      - run: /opt/google/chrome/chrome --version

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: npm transifex
        if: github.repository == 'camptocamp/ngeo'

      - uses: actions/setup-python@v2
      - run: python -m pip install setuptools
      - run: python -m pip install --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - run: |
          sudo apt update
          sudo apt install g++-4.8 python3-venv graphicsmagick fonts-liberation2

      - run: buildtools/set-version

      # Lint
      - run: make lint
      - run: make check-examples-checker
      - run: make test
      # Webpack build of ngeo/gmf examples and gmf apps
      - run: NODE_ENV=production make examples-hosted
      - run: make check-examples
      - uses: actions/upload-artifact@v1
        with:
          name: Examples hosted
          path: .build/examples-hosted
        if: failure()

      #- run: npm run typecheck
      - run: "! (npm run typecheck|grep -v '^node_modules/'|grep '^[a-z]')"
      # Generate API doc
      - run: npm run doc
      - run: npm run jsdoc
      - run: npm run build-api
      - uses: actions/upload-artifact@v1
        with:
          name: Npm logs
          path: /home/runner/.npm/_logs
        if: failure()

      - run: make transifex-send
        if: github.repository == 'camptocamp/ngeo' && github.ref == format('refs/heads/{0}', env.MAIN_BRANCH)
      - run: buildtools/publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.repository == 'camptocamp/ngeo'
      - run: buildtools/npm-publish
        if: github.repository == 'camptocamp/ngeo'

      - name: Notify c2cgeoportal
        run: >
          curl --request POST --header "Content-Type: application/json"
          --header 'Accept: application/vnd.github.v3+json'
          --header "Authorization: token ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}"
          https://api.github.com/repos/camptocamp/c2cgeoportal/dispatches
          --data '{"event_type": "ngeo_25_updated"}'
        if: >
          github.ref == format('refs/heads/{0}', env.MAIN_BRANCH)
          && github.repository == 'camptocamp/ngeo'
