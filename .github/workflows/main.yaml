name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:
  pull_request_target:
    types: [labeled]

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}
  MAIN_BRANCH: master
  CI: true

jobs:
  not-failed-backport:
    runs-on: ubuntu-22.04
    name: Test that's not a failed backport
    timeout-minutes: 5
    steps:
      - run: 'false'
        if: github.event.head_commit.message == '[skip ci] Add instructions to finish the backport.'

  main:
    runs-on: ubuntu-22.04
    name: Continuous integration
    timeout-minutes: 50
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    env:
      PATH: /bin:/usr/bin:/usr/local/bin:/home/runner/.local/bin

    steps:
      - name: GitHub event
        run: echo ${GITHUB_EVENT} | python3 -m json.tool
        env:
          GITHUB_EVENT: ${{ toJson(github) }}
      - run: '! ls BACKPORT_TODO'
      - run: /opt/google/chrome/chrome --version

      - name: Get sha
        id: sha
        run: echo "sha=$(jq -r .pull_request.head.sha < ${GITHUB_EVENT_PATH})" >> $GITHUB_OUTPUT
        if: env.HAS_SECRETS == 'HAS_SECRETS' && github.event_name != 'push'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: github.event_name != 'pull_request_target'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ steps.sha.outputs.sha }}
        if: github.event_name == 'pull_request_target'

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: npm transifex
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: gopass show gs/ci/test-mask
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"

      - run: |
          sudo rm /etc/apt/sources.list.d/*.list
          sudo apt update
          sudo apt install g++-10 libgbm1 graphicsmagick fonts-liberation2 gettext

      - run: buildtools/set-version
      - run: make .build/node_modules.timestamp

        # Lint
      - run: npx tsc --version
      - run: npm run typecheck
        if: github.event_name != 'pull_request_target'
        # First do the lint on TypeScript files to see the error in the many warnings messages
      - run: make .build/eslint-ts.timestamp
        if: github.event_name != 'pull_request_target'
      - name: Publish Storybook to Chromatic to run visual tests
        run: npm run chromatic -- --project-token=$(gopass show gs/ci/chromatic/ngeo_token)
        if: env.HAS_SECRETS == 'HAS_SECRETS' && github.event_name == 'push'
        env:
          NODE_OPTIONS: --openssl-legacy-provider
      - name: Publish Storybook to Chromatic to run visual tests
        run:
          GITHUB_SHA=${GITHUB_SHA_} npm run chromatic -- --project-token=$(gopass show gs/ci/chromatic/ngeo_token)
          --branch-name=${GITHUB_HEAD_REF}
        if: env.HAS_SECRETS == 'HAS_SECRETS' && github.event_name != 'push'
        env:
          NODE_OPTIONS: --openssl-legacy-provider
          GITHUB_SHA_: ${{ steps.sha.outputs.sha }}
